"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const process = __importStar(require("process"));
const js_beautify_1 = require("js-beautify");
const output_1 = require("./cognitive-complexity/output");
main();
async function main() {
    const args = process.argv.slice(2);
    try {
        var filePath = args[0][0] === "/"
            ? args[0]
            : process.cwd() + "/" + args[0];
    }
    catch (ignore) {
        throw new Error("Usage: arg1: target file path");
    }
    await printCognitiveComplexityJson(filePath);
}
async function printCognitiveComplexityJson(fullPath) {
    const relativePath = path.relative(process.cwd(), fullPath);
    const programOutputStr = await output_1.programOutput(relativePath);
    console.log(js_beautify_1.js_beautify(programOutputStr));
}
//# sourceMappingURL=json.js.map
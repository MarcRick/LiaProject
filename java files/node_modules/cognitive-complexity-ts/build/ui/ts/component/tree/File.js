import { showInTree, StickyTitle } from "./StickyTitle.js";
import { ToggleableBox } from "../box/ToggleableBox.js";
import { Score } from "../text/Score.js";
import { CopyText } from "../controls/CopyText.js";
import { concatFilePath } from "../../domain/path.js";
export class File {
    constructor(file, children) {
        this.children = children;
        this.depth = file.depth;
        const fullPath = concatFilePath(file.path, file.name);
        this.title = new StickyTitle([
            file.name,
            CopyText(fullPath),
        ], file.depth);
        this.box = new ToggleableBox([
            this.title.dom,
            Score(file.score),
        ], false, () => this.scrollIntoView());
        this.box.changeHideableContent(() => this.children.map(child => child.dom));
    }
    get dom() {
        return this.box.dom;
    }
    scrollIntoView() {
        showInTree(this.dom, this.depth);
    }
    setChildren(children) {
        this.children = children;
        this.box.changeHideableContent(() => this.children.map(child => child.dom));
    }
    setDepth(depth) {
        if (this.depth !== depth) {
            this.depth = depth;
            this.title.setDepth(depth);
        }
    }
    setOpenness(open) {
        this.box.setOpenness(open);
    }
}
//# sourceMappingURL=File.js.map